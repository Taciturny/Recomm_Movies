name: CI/CD Pipeline

on:
  push:
    branches:
      - stage

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Execute deploy script
        run: |
          chmod +x ../src/deploy.sh
          ../src/deploy.sh

      - name: Run Unit Tests
        working-directory: Tests/Lambda
        run: python unit_test.py

      - name: Run Integration Tests
        working-directory: Tests/infrastructure
        run: pytest -v test_integration.py

      - name: Destroy infrastructure
        run: terraform destroy -auto-approve








# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - stage

# env:
#   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#   AWS_REGION: us-east-1

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Install Python dependencies
#         run: pip install -r requirements.txt

#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           terraform_version: 1.0.0

#       - name: Execute deploy script
#         run: |
#           chmod +x ../src/deploy.sh
#           ../src/deploy.sh

#       - name: Run Unit Tests
#         working-directory: Tests/Lambda
#         run: python unit_test.py

#       - name: Run Integration Tests
#         working-directory: Tests/infrastructure
#         run: pytest -v test_integration.py

#       - name: Destroy infrastructure
#         run: terraform destroy -auto-approve
